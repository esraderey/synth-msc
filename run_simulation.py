import logging
import argparse
from msc_simulation import SimulationRunner, load_config

# Configurar logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def main():
    parser = argparse.ArgumentParser(description="Ejecutar simulaci√≥n MSC con visualizaci√≥n TAECViz+")
    parser.add_argument('--config', type=str, default='config.yaml', help='Archivo de configuraci√≥n')
    parser.add_argument('--viz-port', type=int, default=8080, help='Puerto para el visualizador')
    parser.add_argument('--no-viz', action='store_true', help='Desactivar visualizador')
    args = parser.parse_args()
    
    # Cargar configuraci√≥n
    config = load_config(args.config)
    
    # Agregar configuraci√≥n de visualizaci√≥n
    config['viz_port'] = args.viz_port
    config['viz_active'] = not args.no_viz
    
    # Crear y ejecutar simulaci√≥n
    simulation = SimulationRunner(config)
    
    try:
        print("üöÄ Iniciando simulaci√≥n MSC...")
        simulation.start()
        print("‚úÖ Simulaci√≥n iniciada correctamente.")
        
        if config['viz_active']:
            print(f"üîç Visualizador disponible en: http://localhost:{config['viz_port']}")
            print("Presione Ctrl+C para detener...")
        
        # Mantener el programa en ejecuci√≥n
        while True:
            import time
            time.sleep(1)
    except KeyboardInterrupt:
        print("‚èπÔ∏è Deteniendo simulaci√≥n...")
        simulation.stop()
        print("üëã Simulaci√≥n detenida.")

if __name__ == "__main__":
    main()